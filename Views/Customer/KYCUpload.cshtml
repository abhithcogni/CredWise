@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KYC Verification - MyBank</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="form-styles.css">
    <style>
        .kyc-form-container-wrapper {
            max-width: 700px; /* Slightly wider for KYC form */
            width: 100%;
            margin: auto;
        }

        .form-floating > .form-control:focus ~ label,
        .form-floating > .form-control:not(:placeholder-shown) ~ label,
        .form-floating > .form-select ~ label {
            color: #0A2463; /* Highlight color for floating labels */
        }

        .btn-primary {
            background-color: #3E92CC;
            padding: 0.75rem 1rem; /* Larger buttons */
            font-weight: 500;
        }

            .btn-primary:hover {
                background-color: #0A2463 !important;
                border-color: white;
            }

        .form-check-input{
            accent-color: #0A2463;
        }
    </style>
</head>
<body>
    <div class="kyc-form-container-wrapper mt-3">
        <div class="card form-card">
            <div class="card-header">
                <i class="fas fa-shield-alt"></i>KYC Document Upload
            </div>
            <div class="card-body">
                <div class="alert alert-instructions" role="alert">
                    <h4 class="alert-heading"><i class="fas fa-info-circle me-2"></i>Important Information</h4>
                    <p>To complete your KYC verification, please upload clear copies of the required documents. Ensure the documents are valid and legible.</p>
                    <hr>
                    <p class="mb-0">Accepted file types: JPG, PNG, PDF. Maximum file size: 5MB.</p>
                </div>

                <form id="kycForm" enctype="multipart/form-data">
                    <div class="mb-4">
                        <label for="documentTypeIdentity" class="form-label fw-bold"><i class="fas fa-id-card me-2"></i>Identity Proof Document</label>
                        <select class="form-select form-select-lg mb-2" id="documentTypeIdentity" required>
                            <option selected disabled value="">Select Document Type...</option>
                            <option value="passport">Passport</option>
                            <option value="drivers_license">Driver's License</option>
                            <option value="national_id">National ID Card</option>
                            <option value="aadhaar_card">Aadhaar Card (India)</option>
                            <option value="other_id">Other Government Issued ID</option>
                        </select>
                        <label for="identityProofFile" class="file-upload-label">Upload Identity Proof:</label>
                        <input class="form-control form-control-lg" type="file" id="identityProofFile" name="identityProofFile" accept=".jpg,.jpeg,.png,.pdf" required>
                        <div class="form-text">Please upload the front side of your ID. If two-sided, combine into one PDF or upload the second page below.</div>
                    </div>
                    <div class="form-check mb-4">
                        <input class="form-check-input" type="checkbox" value="" id="declaration" required>
                        <label class="form-check-label" for="declaration">
                            I declare that the information and documents provided are true, correct, and up-to-date.
                        </label>
                    </div>

                    <button type="submit" class="btn btn-primary btn-lg w-100">
                        <i class="fas fa-upload me-2"></i>Submit Documents for Verification
                    </button>
                </form>

                <div class="mt-4 text-center">
                    <p class="text-muted">Your KYC status is currently: <strong class="text-warning">PENDING</strong>. <br> It will be updated to <strong class="text-success">VERIFIED</strong> after successful review by our team (usually within 24-48 hours).</p>
                </div>
            </div>
        </div>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        // Add any KYC-specific JavaScript here (e.g., file validation, form submission)
        document.getElementById('kycForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent actual submission for demo

            const identityFile = document.getElementById('identityProofFile').files[0];
            const addressFile = document.getElementById('addressProofFile').files[0];

            if (!identityFile || !addressFile) {
                alert('Please select both identity and address proof documents.');
                return;
            }

            // Basic file size check (example: 5MB)
            const maxSize = 5 * 1024 * 1024;
            if (identityFile.size > maxSize || addressFile.size > maxSize) {
                alert('One or more files exceed the maximum size of 5MB.');
                return;
            }

            alert('KYC documents submitted for verification!');
            // Add your AJAX KYC submission logic here
            // This would typically involve using FormData to send the files
        });

        // Preview file name (optional UX improvement)
        function setupFileInputListener(inputId) {
            const fileInput = document.getElementById(inputId);
            if (fileInput) {
                fileInput.addEventListener('change', function() {
                    const fileName = this.files[0] ? this.files[0].name : `No file chosen`;
                    // You could display this fileName next to the input if you add a span or similar element
                    console.log(inputId + ' selected: ' + fileName);
                });
            }
        }
        setupFileInputListener('identityProofFile');
        setupFileInputListener('addressProofFile');
        setupFileInputListener('selfieFile');

    </script>
</body>
</html>